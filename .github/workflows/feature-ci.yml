name: Feature Branch CI

on:
  push:
    branches:
      - 'feature/**'
      - 'feat/**'
  pull_request:
    branches:
      - develop
      - main

jobs:
  test:
    name: Test Feature Branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: |
          cd graphql-plugin
          go mod download

      - name: Run tests
        run: |
          cd graphql-plugin
          go test -v ./...

      - name: Run linting
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          cd graphql-plugin
          golangci-lint run

      - name: Check code coverage
        run: |
          cd graphql-plugin
          go test -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: graphql-plugin/coverage.html

  build-test:
    name: Build Test Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-

      - name: Build and push test image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GO_FILTER_NAME=graphql-federation
            GOARCH=amd64
            GOPROXY=https://proxy.golang.org,direct
          cache-from: type=gha
          cache-to: type=gha,mode=max

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start test environment
        run: |
          cd graphql-plugin/scripts
          docker-compose up -d
          sleep 30

      - name: Run integration tests
        run: |
          # Wait for services to be ready
          timeout 60 bash -c 'until curl -f http://localhost:10000/graphql; do sleep 2; done'
          
          # Test GraphQL federation query
          curl -X POST -H "Content-Type: application/json" \
            --data '{"query":"{ users { id name } products { id name price } }"}' \
            http://localhost:10000/graphql

      - name: Cleanup test environment
        if: always()
        run: |
          cd graphql-plugin/scripts
          docker-compose down -v
